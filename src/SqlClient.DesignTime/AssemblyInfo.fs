// Auto-Generated by FAKE; do not edit
namespace System
open System.Reflection
open System.Runtime.CompilerServices

[<assembly: AssemblyTitleAttribute("SqlClient.DesignTime")>]
[<assembly: AssemblyProductAttribute("FSharp.Data.SqlClient.DesignTime")>]
[<assembly: AssemblyDescriptionAttribute("SqlClient F# type providers")>]
[<assembly: AssemblyVersionAttribute("2.1.2")>]
[<assembly: AssemblyFileVersionAttribute("2.1.2")>]
[<assembly: InternalsVisibleToAttribute("SqlClient.Tests")>]

do ()

module internal AssemblyVersionInformation =
    let [<Literal>] AssemblyTitle = "SqlClient.DesignTime"
    let [<Literal>] AssemblyProduct = "FSharp.Data.SqlClient.DesignTime"
    let [<Literal>] AssemblyDescription = "SqlClient F# type providers"
    let [<Literal>] AssemblyVersion = "2.1.2"
    let [<Literal>] AssemblyFileVersion = "2.1.2"
    let [<Literal>] InternalsVisibleTo = "SqlClient.Tests"

    (*
    System.AppDomain.CurrentDomain.add_AssemblyResolve(fun _ args ->
        let name = System.Reflection.AssemblyName(args.Name)
        let existingAssembly = 
            System.AppDomain.CurrentDomain.GetAssemblies()
            |> Seq.tryFind(fun a -> System.Reflection.AssemblyName.ReferenceMatchesDefinition(name, a.GetName()))
        match existingAssembly with
        | Some a -> a
        | None -> null
    )
    *)
